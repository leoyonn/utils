thrift: 
  hard_home: /opt/www/xmpush
  link_home: /opt/soft/xmpush-services
  start_cmd: ssh %(user)s@%(host)s "supervisorctl restart xmpush-%(service_name)s"

resin: 
  hard_home: /opt/www
  link_home: /opt/soft
  start_cmd: |
    ssh %(user)s@%(host)s "
    source /etc/profile;
    chown -R www.www %(hard_path)s; 
    chown -R www.www %(link_path)s;
    /opt/soft/resin/bin/resin.sh -server %(service_name)s kill;
    sleep 2;
    /opt/soft/resin/bin/resin.sh -server %(service_name)s status;
    /opt/soft/resin/bin/resin.sh -server %(service_name)s start;"

gen_build_info: |
  echo "# Build info auto generated by generate_build_info.sh: DON\'T modifiy manually! 
  service_name=%(module)s 
  module_type=%(module_type)s 
  build_cmd=%(build_cmd)s" > %(classes)s/build_info.properties;
  ./scripts/generate_build_info.sh >> %(classes)s/build_info.properties

gen_zksettings:
  echo "%(zksettings)s" > %(classes)s/zookeeper.properties

gen_zkservers:
  echo "%(zkservers)s" > %(classes)s/zookeeper_servers.properties

gen_envs:
  echo 'ip=%(host)s
  %(hbase_kerberos)s' > %(target)s/envs.properties

prepare_local: |
  cp -r scripts/* %(target)s/;
  cp -r %(source)s/scripts/* %(target)s;
  cp conf/services.properties %(classes)s/com.xiaomi.xmpush.thrift.%(thrift_name)s.properties;

prepare_remote: |
  ssh %(user)s@%(host)s "
    ls -htd %(hard_home)s/%(module)s.* | awk '{if(skipped == 1){ print $1} else { skipped = 1}}' |xargs rm -rf;
    mkdir -p %(hard_path)s;
    mkdir -p %(link_home)s;
    "
  scp -r %(target)s/* %(user)s@%(host)s:%(hard_path)s/ 1>/dev/null;
  ssh %(user)s@%(host)s "
    rm -f %(link_path)s.last;
    mv %(link_path)s %(link_path)s.last;
    ln -s %(hard_path)s %(link_path)s;"
